#!/bin/bash
 
. /usr/local/sfsget/script/functions

RESTART=$0
TITLE=" System Applications "
ICON="browserdload"                     # window icon (appears in launcher)
IMAGE="browserdload"
TEXT1="             <b>Downloads</b> in progress:"        # dialog text
export HOSTDIR="https://github.com/DebianDog/SFSget/releases/tag/System/"
export DLHOSTDIR="https://github.com/DebianDog/SFSget/releases/download/System/"

ALL=$(while read line; do echo application-x-squashfs `basename $line`; done <<< "$(elinks -dump "$HOSTDIR" | grep 'releases/download/System' | awk '/https/{print $2}')") 
#ALL="$CONTENTFILE"
GUI=$(yad --separator=" " --image="application-x-squashfs" --image-on-top --center --height 500 --width="500" --list --title="$TITLE" --multiple --text=" Download SFS modules (.squashfs or .sfs). \n Select (multiple) items to download." --column="     :IMG"  --column " Available Modules" $ALL --print-column=2 --button="gtk-quit:1" --button="gtk-ok:0")

button1=$?
case $button1 in

1) 
	echo "Exiting" && exit  
;; 
 
0)
if [[ -n "$GUI" ]]; then
if [ ! -w $BASE ]; then
echo "It seems that $BASE is on read-only media, booting from CD maybe?"
BASE=/root
fi
# Select folder to download to:
SAVEFOLDER=$(yad  --center --image="application-x-squashfs" --image-on-top --title="Select folder to download SFS modules" --file --filename "$BASE" --directory --height=600 --width=800 --text=" Select folder to download SFS modules to" )
ret=$?
[[ $ret -ne 0 ]] && exit 1

URILIST="`echo "$GUI" | sed "s,^,$DLHOSTDIR/," | tr '\n' ' '`"

MAXDLS="5" # set maximum number of simultaneous downloads

# download file and extract progress, speed and ETA from wget
# we use sed regex for this
# source: http://ubuntuforums.org/showthread.php?t=306515&page=2&p=7455412#post7455412
# modified to work with different locales and decimal point conventions
download(){
    cd "$SAVEFOLDER"
    wget --no-check-certificate "$1" 2>&1 | sed -u \
    "s/.* \([0-9]\+%\)\ \+\([0-9,.]\+.\) \(.*\)/$2:\1\n$2:# Downloading at \2\/s, ETA \3/"
    RET_WGET="${PIPESTATUS[0]}"             # get return code of wget
    if [[ "$RET_WGET" = 0 ]]                # check return code for errors
      then
          echo "$2:100%"
          echo "$2:#Download completed."
      else
          echo "$2:#Download error."
    fi
}


# compose list of bars for yad
for URI in $URILIST; do                     # iterate through all URIs
    FILENAME="${URI##*/}"                   # extract last field of URI as filename
    YADBARS="$YADBARS --bar=$FILENAME:NORM" # add filename to the list of URIs
done

IFS=" "
COUNTER="1"
DYNAMIC_COUNTER="1"

# main
# iterate through all URIs, download them in the background and 
# pipe all output simultaneously to yad
# source: http://pastebin.com/yBL2wjaY

for URI in $URILIST; do
    if [[ "$DYNAMIC_COUNTER" = "$MAXDLS" ]] # only download n files at a time
      then
          download "$URI" "$COUNTER"        # if limit reached wait until wget complete
          DYNAMIC_COUNTER="1"               # before proceeding (by not sending download() to bg)
      else
          download "$URI" "$COUNTER" &      # pass URI and URI number to download()
          DYNAMIC_COUNTER="$[$DYNAMIC_COUNTER+1]"
    fi
    COUNTER="$[$COUNTER+1]"                 # increment counter
done | yad --center --multi-progress --on-top --auto-kill $YADBARS --title "$TITLE" \
--text "$TEXT1" --window-icon "$ICON" --image "$IMAGE"

# launch yad multi progress-bar window

  else
  echo "No package selected" && $RESTART && exit
fi
;;
esac
